#Set the root logger at Debug level and use the Standard
#Appender defined below
#log4perl.rootLogger = ERROR, standardApp
log4perl.rootLogger = DEBUG, standardApp
log4perl.logger.defaultLogger = DEBUG


#To have log4perl do log rotation, get Dispatch::FileRotate and use the line below
#log4perl.appender.standardApp=Log::Dispatch::FileRotate
#and comment out the line below
log4perl.appender.standardApp=Log::Dispatch::File
log4perl.appender.standardApp.filename=sub { Giovanni::BinLogger::getFileName(); }
log4perl.appender.standardApp.mode=append
log4perl.appender.standardApp.additivity=0
log4perl.appender.standardApp.layout=Log::Log4perl::Layout::PatternLayout
log4perl.appender.standardApp.layout.ConversionPattern = %d %p %F{1} %M %L %m%n
log4perl.appender.standardApp.umask = 0777

#This would set a max size if you had FileRotate above
#log4perl.appender.standadrApp.size=1_000_000

######################################################
#  If you wish to use the configuration file for assigning
# the appenders you'll probably want dynamic appenders
# like you have now.  To do this, the current way I know of
# is to use Perl Hooks in here:
#
# log4perl.appender.File.filename = \ (there can't be ANYTHING after \)
#	sub{ PERL FUNCTIONS / ENVIRONMENT VARIABLES / PERL CODE }
#
# Understand that doing this allows for people to write code in your
# configuration file which WILL be executed.
######################################################
